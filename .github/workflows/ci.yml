# .github/workflows/ci.yml

name: CI

# This trigger runs in the context of the base repository, which has access to secrets.
on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, edited]
    branches:
      - main
      - master

# A workflow is made of one or more jobs
jobs:
  build_and_test:
    # Runs the job on the latest version of Ubuntu
    runs-on: ubuntu-latest

    # A sequence of tasks to be executed
    steps:
      # Step 1: Checks out your repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }} 

      # Step 2: Sets up pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # Step 3: Sets up the Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"

      # Step 4: Installs all project dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 5: Cache Next.js build
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-

      # Step 6: Runs the build script
      - name: Build project
        run: pnpm run build
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGO_CLIENT: ${{ secrets.MONGO_CLIENT }}
          ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          NEXTAUTH_URL: http://localhost:3000

      # Step 7: Runs the test suite
      - name: Run tests
        run: pnpm test